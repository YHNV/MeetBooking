<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper namespace="com.example.mapper.UserMapper"> -->

<mapper namespace="com.zb.backend.mapper.EmployeeMapper">
    <!-- Employee实体类与employees表的字段映射 -->
    <resultMap id="EmployeeResultMap" type="com.zb.backend.entity.Employee">
        <result property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="deptId" column="dept_id"/>
        <result property="position" column="position"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="idCard" column="id_card"/>
        <result property="isManager" column="is_manager"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <insert id="insertEmployee">
        insert into EMPLOYEES (emp_name, dept_id, position, phone, email, id_card, is_manager)
        values (#{empName}, #{deptId}, #{position}, #{phone}, #{email}, #{idCard}, #{isManager});
    </insert>
    <update id="updateEmployeeInfo">
        update EMPLOYEES
        set EMP_NAME = #{empName},
            DEPT_ID = #{deptId},
            POSITION = #{position},
            PHONE = #{phone},
            EMAIL = #{email},
            ID_CARD = #{idCard}
        where EMP_ID = #{empId};
    </update>
    <select id="existsByPhone" resultType="java.lang.Boolean">
        select count(*) > 0
        from EMPLOYEES
        where PHONE = #{phone};
    </select>
    <select id="existsByIdCard" resultType="java.lang.Boolean">
        select count(*) > 0
        from EMPLOYEES
        where ID_CARD = #{idCard};
    </select>
    <select id="selectEmployeeByEmpId" resultType="com.zb.backend.entity.Employee">
        select emp_id, emp_name, dept_id, position, phone, email, id_card, is_manager, create_time, update_time
        from EMPLOYEES
        where EMP_ID = #{empId};
    </select>
    <select id="countEmployeeList" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM employees e
        INNER JOIN accounts a ON e.emp_id = a.account_id
        INNER JOIN departments d ON e.dept_id = d.dept_id
        <where>
            <if test="deptId != null">
                AND e.dept_id = #{deptId}
            </if>
            <if test="isActive != null">
                AND a.is_active = #{isActive}
            </if>
            <if test="isManager != null">
                AND e.is_manager = #{isManager}
            </if>
            <if test="empName != null and empName != ''">
                AND e.emp_name LIKE CONCAT('%', #{empName}, '%')
            </if>
        </where>
    </select>
    <select id="selectEmployeeList" resultType="com.zb.backend.model.response.QueryEmployeesResponse">
        SELECT
            a.account_id,
            a.is_active,
            a.last_login_time,
            e.emp_id,
            e.emp_name,
            e.position,
            e.phone,
            e.email,
            e.id_card,
            e.is_manager,
            e.create_time,
            d.dept_id,
            d.dept_name
        FROM employees e
                INNER JOIN accounts a ON e.emp_id = a.account_id
                INNER JOIN departments d ON e.dept_id = d.dept_id
        <where>
            <if test="deptId != null">
                AND e.dept_id = #{deptId}
            </if>
            <if test="isActive != null">
                AND a.is_active = #{isActive}
            </if>
            <if test="isManager != null">
                AND e.is_manager = #{isManager}
            </if>
            <if test="empName != null and empName != ''">
                AND e.emp_name LIKE CONCAT('%', #{empName}, '%')
            </if>
        </where>
        ORDER BY a.account_id ASC
        <!-- 关键：使用 ${} 直接拼接，因为 MyBatis 对 LIMIT 子句中的 #{} 处理在不同数据库下可能有问题 -->
        LIMIT ${(pageNum - 1) * pageSize}, #{pageSize}
    </select>
</mapper>